@use "sass:math";

// Подключение миксинов ===========================================================================================================================================================================================================================================================================
@import "base/mixins";

// Подключение шрифтов ===========================================================================================================================================================================================================================================================================
//&display=swap - добавить при подключении через плагин

// Подключить если есть локальные файлы шрифтов
@import "fonts/fonts";

// Подключение иконочных шрифтов ==============================================================================================================================================================================================================================================================================
// Подключить если есть файл иконочного шрифта
//@import "fonts/icons";

// ============================================================================================================================================================================================================================================================================================================================================================================================
// Настройка шаблона ============================================================================================================================================================================================================================================================================================================================================================================================
// ============================================================================================================================================================================================================================================================================================================================================================================================

// Шрифт по умолчанию ==============================================================================================================================================================================================================================================================================
$fontFamily: "Roboto";
$fontSize: toRem(14); // где 14(px) - размер шрифта по умолчанию из макета

// Основные цвета
$mainColor: #000; // Цвет шрифта по умолчанию
$knopka-rozovaya: #bf5c7a;
$knopka-bordovaya: #931e3f;
$zagolovok: #7f203b;
$tekst-zagolovok-ne-aktivnyy: #b27586;
$zelenysh: #0e9f51;
$fon: #fdfafb;
// Палитра цветов
// @import "base/colors-palette";

// Настройка адаптивной сетки ===============================================================================================================================================================================================================================================================================================

// Минимальная ширина страницы
$minWidth: 320;
// Ширина полотна (макета)
$maxWidth: 1920;
// Ширина ограничивающего контейнера (0 = нет ограничения)
$maxWidthContainer: 1540;
// Общий отступ у контейнера
// (30 = по 15px слева и справа, 0 = нет отступа)
$containerPadding: 30;

// Ширина срабатывания первого брейкпоинта
$containerWidth: $maxWidthContainer + $containerPadding;

// Брейк-поинты
$pc: em($containerWidth); // ПК, ноутбуки, некоторые планшеты в горизонтальном положении
$pcSmall: em(1280.98); // Планшеты, некоторые телефоны в горизонтальном положении
$tablet: em(1001.98); // Планшеты, некоторые телефоны в горизонтальном положении
$mobile: em(767.98); // Телефоны L
$mobileSmall: em(480.98); // Телефоны S

// Тип адаптива:
// 1 = отзывчивость (у контейнера нет брейкпоинтов),
// 2 = по брейк-поинтам (контейнер меняет свою ширину по брейк-поинтам)
$responsiveType: 1;

// ============================================================================================================================================================================================================================================================================================================================================================================================
// ============================================================================================================================================================================================================================================================================================================================================================================================

// Обнуление и общие параметры ============================================================================================================================================================================================== =============================================================================================== ===============================================================================================
@import "base/null";

// Стили тега BODY ============================================================================================================================================================================================================================================================================================================================================================================================
body {
	// Скролл заблокирован
	.lock & {
		overflow: hidden;
		touch-action: none;
		overscroll-behavior: none;
	}
	// Сайт загружен
	.loaded & {
	}
	
}
// Оболочка wrapper ============================================================================================================================================================================================================================================================================================================================================================================================================================================
.wrapper {
	min-height: 100%;
	display: flex;
	flex-direction: column;
	overflow: hidden;
	
	@supports (overflow: clip) {
		overflow: clip;
	}
	// Прижимаем footer
	> main {
		flex: 1 1 auto;
	}
	// Фикс для слайдеров
	> * {
		min-width: 0;
	}
}

main {
	// transition: background-color 0.3s, opacity 0.3s;
	background: $fon;
}
// Ограничивающий контейнер ======================================================================================================================================================================================================================
/*
(i) Стили будут применяться к
всех классов, содержащих *__container
Например header__container, main__container і т.п.
Сниппет (HTML): cnt
*/
@if ($responsiveType==1) {
	// Отзывчивая
	[class*="__container"] {
		@if ($maxWidthContainer>0) {
			max-width: toRem($containerWidth);
			margin: 0 auto;
		}
		@if ($containerPadding>0) {
			@if ($maxWidthContainer>0) {
				padding: 0 toRem(math.div($containerPadding, 2));
			} @else {
				@include adaptiveValue("padding-left", math.div($containerPadding, 2), 15);
				@include adaptiveValue("padding-right", math.div($containerPadding, 2), 15);
			}
		}
	}
} @else {
	// По брейк-поинтам
	[class*="__container"] {
		margin: 0 auto;
		@if ($maxWidthContainer>0) {
			max-width: toRem($containerWidth);
		} @else {
			@if ($containerPadding>0) {
				padding: 0 toRem(math.div($containerPadding, 2));
			}
		}
		@media (max-width: $pc) {
			max-width: toRem(970);
		}
		@media (max-width: $tablet) {
			max-width: toRem(750);
		}
		@media (max-width: $mobile) {
			max-width: none;
			@if ($containerPadding>0 and $maxWidthContainer>0) {
				padding: 0 toRem(math.div($containerPadding, 2));
			}
		}
	}
}

// Подключение базовых стилей, шаблонов (заготовок) и вспомогательных  классов
// Для подключения/отключения конкретных стилей смотри base.scss
@import "base";

// Подключение стилей общих элементов проекта
@import "common";

// Подключение стилей отдельных блоков
@import "header";
@import "footer";

// Подключение стилей отдельных страниц
@import "loader.scss";
@import "home/baners";
@import "home/products";
@import "home/discounts";
@import "home/parfum";
@import "home/video";
@import "home/otzv";
@import "home/about-store";
@import "brands.scss";
@import "catalog/catalog.scss";
@import "catalog/popup-catalog.scss";
@import "search/search.scss";
@import "otlivants/otlivants-catalog.scss";
@import "otlivants/otlivant//view-otlivant.scss";
@import "otlivants//otlivant/otlivant-main.scss";
@import "otlivants//otlivant/otlivant-review.scss";
@import "otlivants//otlivant/otlivant-article.scss";
@import "product/produce.scss";
@import "product.scss";
@import "carts/carts-main/cart-main.scss";
@import "carts/carts-main/aside-cart.scss";
@import "carts/carts-main/out-stock.scss";
@import "carts/carts-main/address.scss";
@import "carts/carts-main/method.scss";
@import "carts/cart-other.scss";
@import "carts/cart-popups.scss";
@import "lk/lk-data.scss";
@import "lk/lk-discount.scss";
@import "lk/lk-history.scss";
@import "lk/lk-bonus.scss";
@import "lk/lk-favorites.scss";
@import "lk/lk-wait.scss";
@import "lk/lk-list.scss";
@import "lk/lk-sertificates.scss";
@import "lk/lk-reviews.scss";
@import "certificates.scss";
@import "rev-prod.scss";
@import "reviews.scss";
@import "comments.scss";
@import "where.scss";
@import "delivery.scss";
@import "calculator.scss";
@import "actions.scss";
@import "404.scss";
@import "articles.scss";
@import "store.scss";